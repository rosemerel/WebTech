{"ast":null,"code":"var _jsxFileName = \"/home/rose/Documents/ING4/WebTechnologies/Lab3_4/font-end/src/Messages.js\";\nimport React from 'react';\nimport { useState } from 'react';\nexport default (({\n  channel = {\n    name: 'Fake channel'\n  }\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-messages\",\n    css: styles.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Messages for \", channel.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    css: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, message.author), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, new Date(message.creation).toString())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, message.content.split(/(\\n +\\n)/).filter(el => el.trim()).map(el => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 35\n    }\n  }, el)))))));\n});","map":{"version":3,"sources":["/home/rose/Documents/ING4/WebTechnologies/Lab3_4/font-end/src/Messages.js"],"names":["React","useState","channel","name","styles","messages","map","message","i","author","Date","creation","toString","content","split","filter","el","trim"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,gBAAe,CAAC;AACZC,EAAAA,OAAO,GAAG;AACNC,IAAAA,IAAI,EAAE;AADA;AADE,CAAD,KAGH;AAIR,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA+B,IAAA,GAAG,EAAEC,MAAM,CAACC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBH,OAAO,CAACC,IAA1B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIE,QAAQ,CAACC,GAAT,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACd;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,GAAG,EAAEJ,MAAM,CAACG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAO,CAACE,MAAf,CADF,EAEG,GAFH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,IAAIC,IAAJ,CAASH,OAAO,CAACI,QAAjB,CAAD,CAA6BC,QAA7B,EAAP,CAHF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,OAAO,CAACM,OAAR,CACCC,KADD,CACO,UADP,EAECC,MAFD,CAESC,EAAE,IAAIA,EAAE,CAACC,IAAH,EAFf,EAGCX,GAHD,CAGMU,EAAE,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,EAAJ,CAHZ,CAFJ,CANF,CADA,CADJ,CAFJ,CADJ;AAwBH,CA/BD","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nexport default ({\n    channel = {\n        name: 'Fake channel'\n    } }) => {\n\n\n\n    return (\n        <div className=\"App-messages\"  css={styles.messages}>\n            <h1>Messages for {channel.name}</h1>\n            <ul>\n              { messages.map( (message, i) => (\n                <li key={i} css={styles.message}>\n                  <p>\n                    <span>{message.author}</span>\n                    {' '}\n                    <span>{(new Date(message.creation)).toString()}</span>\n                  </p>\n                  <div>\n                    {\n                      message.content\n                      .split(/(\\n +\\n)/)\n                      .filter( el => el.trim() )\n                      .map( el => <p>{el}</p>)\n                    }\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}